WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

Program = _{ SOI ~ Statement ~ EOI }

Statement = { Assignment }

Assignment = { "let" ~ Identifier ~ "=" ~ Expression ~ ";" }

Expression = { 
    UnaryExpression |
    BinaryExpression |
    IntegerLiteral |
    BooleanLiteral
}

UnaryExpression = { "(" ~ UnaryOperator ~ Expression ~ ")" }

UnaryOperator = { "-" | "not" }

BinaryExpression = { "(" ~ BinaryOperator ~ Expression ~ Expression ~ ")" }

BinaryOperator = @{ "+" | "-" | "*" | "/" |
    "==" | "!=" |
    // 'or equal to' versions of relation operations must come first
    // before their strict versions to avoid parsing errors because this
    // is a PEG, '|'s represent ordered choice, not alternation
    "<=" | "<" | ">=" | ">" |
    "or" | "and"
}

IntegerLiteral = @{ ASCII_DIGIT+ }

BooleanLiteral = @{ "true" | "false" }

Identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
